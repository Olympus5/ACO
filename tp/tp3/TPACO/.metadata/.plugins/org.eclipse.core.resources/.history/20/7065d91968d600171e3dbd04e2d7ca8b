package receiver;

import static org.assertj.core.api.Assertions.assertThat;
import static org.junit.Assert.*;

import org.junit.Before;
import org.junit.Test;
import org.mockito.Mock;
import org.mockito.Mockito;

import bean.Selection;
import memento.Memento;
import memento.MementoColler;
import memento.MementoCopier;
import memento.MementoInserer;
import memento.MementoSelectionner;

public class EnregistreurImplUnitTest {
	private  EnregistreurImpl enregistreur;
	private MoteurImpl moteur;
	
	@Before
	public void setup() {
		
		this.moteur = new MoteurImpl();
		this.enregistreur = new EnregistreurImpl(this.moteur);
	}
	
	@Test
	public void Rejouer() {
		Memento mementoInserer= new MementoInserer(moteur,"coucou");
		Memento mementoSelection = new MementoSelectionner(moteur,new Selection(0,6));
		Memento mementoCopier = new MementoCopier(moteur);
		Memento mementoSelection2 = new MementoSelectionner(moteur,new Selection(6,6));
		Memento mementoColler = new MementoColler(moteur);
		this.enregistreur.CommandsMacro.add(mementoInserer);
		this.enregistreur.CommandsMacro.add(mementoSelection);
		this.enregistreur.CommandsMacro.add(mementoCopier);
		this.enregistreur.CommandsMacro.add(mementoSelection2);
		this.enregistreur.CommandsMacro.add(mementoColler);
		this.enregistreur.Stopper();
		this.enregistreur.Rejouer();
		assertThat(this.moteur.buffer.toString()).isEqualTo("coucoucoucou");
	}
	
	@Test
	public void Demarrer() {
		this.enregistreur.Demarrer();
		assertThat(this.enregistreur.isEnregistrementOn()).isEqualTo(true);
	}
	
	@Test
	public void Stopper() {
		Demarrer();
		this.enregistreur.Stopper();
		assertThat(this.enregistreur.isEnregistrementOn()).isEqualTo(false);
	}
	
	@Test
	public void EnregistrerMWhenIsActive() {
		Memento memento = new MementoColler(this.moteur);
		this.enregistreur.Demarrer();
		this.enregistreur.enregistrerM(memento);
		assertThat(this.enregistreur.CommandsMacro).contains(memento);
	}
	
	@Test
	public void EnregistrerMWhenIsNotActive() {
		Memento memento = new MementoColler(this.moteur);
		this.enregistreur.enregistrerM(memento);
		assertThat(this.enregistreur.CommandsMacro).doesNotContain(memento);
	}
	
	
	@Test
	public void EnregistrerC() {
		Memento memento = new MementoColler(this.moteur);
		this.enregistreur.enregistrerC(memento);
		assertThat(this.enregistreur.Commands).contains(memento);
		assertThat(this.enregistreur.getPosition()).isEqualTo(1);
	}
	
	@Test 
	public void Undo() {
		Memento mementoInserer= new MementoInserer(moteur,"coucou");
		Memento mementoSelection = new MementoSelectionner(moteur,new Selection(0,6));
		Memento mementoCopier = new MementoCopier(moteur);
		Memento mementoSelection2 = new MementoSelectionner(moteur,new Selection(6,6));
		Memento mementoColler = new MementoColler(moteur);
		this.enregistreur.commandStack.push(mementoInserer);
		this.enregistreur.commandStack.push(mementoSelection);
		this.enregistreur.commandStack.push(mementoCopier);
		this.enregistreur.commandStack.push(mementoSelection2);
		this.enregistreur.commandStack.push(mementoColler);
		this.enregistreur.setPostion(5);
		int pos = this.enregistreur.getPosition();
		this.enregistreur.Undo();
		assertThat(this.enregistreur.getPosition()).isEqualTo(pos-1);
		assertThat(this.moteur.getBuffer().toString()).isEqualTo("coucou");
		assertThat(this.moteur.getPressePapier()).isEqualTo("coucou");
		assertThat(this.moteur.getSelection().getBegin()).isEqualTo(6);
		assertThat(this.moteur.getSelection().getEnd()).isEqualTo(6);
	}
	
	@Test
	public void Redo() {
		Memento mementoInserer= new MementoInserer(moteur,"coucou");
		Memento mementoSelection = new MementoSelectionner(moteur,new Selection(0,6));
		Memento mementoCopier = new MementoCopier(moteur);
		Memento mementoSelection2 = new MementoSelectionner(moteur,new Selection(6,6));
		Memento mementoColler = new MementoColler(moteur);
		this.enregistreurcommandStack.push(mementoInserer);
		this.enregistreur.commandStack.push(mementoSelection);
		this.enregistreur.commandStack.push(mementoCopier);
		this.enregistreur.commandStack.push(mementoSelection2);
		this.enregistreur.commandStack.push(mementoColler);
		this.enregistreur.setPostion(3);
		int pos = this.enregistreur.getPosition();
		this.enregistreur.Redo();
		assertThat(this.enregistreur.getPosition()).isEqualTo(pos+1);
		assertThat(this.moteur.getBuffer().toString()).isEqualTo("coucou");
		assertThat(this.moteur.getPressePapier()).isEqualTo("coucou");
		assertThat(this.moteur.getSelection().getBegin()).isEqualTo(6);
		assertThat(this.moteur.getSelection().getEnd()).isEqualTo(6);
	}
	
	
	
}
